-- 1. Particionamiento por Fecha con Clustering
CREATE OR REPLACE TABLE `${project_id}.processed_dataset.events_optimized`
PARTITION BY DATE(event_timestamp)
CLUSTER BY user_id, event_type
OPTIONS(
  partition_expiration_days = 90,
  require_partition_filter = true
) AS 
SELECT * FROM `${project_id}.raw_dataset.events`;

-- 2. Vista Materializada para Análisis Frecuentes
CREATE MATERIALIZED VIEW `${project_id}.analytics_dataset.daily_metrics`
AS SELECT
  DATE(event_timestamp) as date,
  user_id,
  event_type,
  COUNT(*) as event_count,
  SUM(CASE WHEN status = 'success' THEN 1 ELSE 0 END) as successful_events,
  AVG(duration) as avg_duration
FROM `${project_id}.processed_dataset.events_optimized`
GROUP BY 1, 2, 3;

-- 3. Políticas de Retención y Archivado
CREATE OR REPLACE TABLE `${project_id}.archive_dataset.events_archive`
PARTITION BY DATE(event_timestamp)
CLUSTER BY user_id
OPTIONS(
  partition_expiration_days = 365
) AS 
SELECT * FROM `${project_id}.processed_dataset.events_optimized`
WHERE DATE(event_timestamp) < DATE_SUB(CURRENT_DATE(), INTERVAL 90 DAY);
